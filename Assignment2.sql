use mavenmovies;

-- Retrieve the total number of rentals made in the Sakila database.
SELECT 
    COUNT(rental_id)
FROM
    rental;

-- Find the average rental duration (in days) of movies rented from the Sakila database.
SELECT 
    AVG(rental_duration)
FROM
    film;

-- Display the first name and last name of customers in uppercase.
SELECT 
    UPPER(first_name) AS first_name_in_caps,
    UPPER(last_name) AS last_name_in_caps
FROM
    customer;

-- Extract the month from the rental date and display it alongside the rental ID.
SELECT 
    rental_id, MONTH(rental_date)
FROM
    rental;

-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
SELECT 
    customer_id, COUNT(*) AS number_of_rental
FROM
    rental
GROUP BY customer_id;

-- Find the total revenue generated by each store.
SELECT 
    staff_id, SUM(amount) AS total_revenue
FROM
    payment
GROUP BY staff_id;

SELECT 
    s.store_id, SUM(amount) AS total_revenue
FROM
    payment p
        INNER JOIN
    staff s ON s.staff_id = p.staff_id
        INNER JOIN
    store st ON st.store_id = s.store_id
GROUP BY s.store_id;

-- Display the title of the movie, customer s first name, and last name who rented it.
SELECT 
    f.title, c.first_name, c.last_name
FROM
    film f
        INNER JOIN
    inventory i ON f.film_id = i.film_id
        INNER JOIN
    rental r ON r.inventory_id = i.inventory_id
        INNER JOIN
    customer c ON c.customer_id = r.customer_id;

-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
SELECT 
    a.first_name, a.last_name
FROM
    actor a
        INNER JOIN
    film_actor fa ON a.actor_id = fa.actor_id
        INNER JOIN
    film f ON f.film_id = fa.film_id
WHERE
    f.title = 'GONE TROUBLE';

-- Determine the total number of rentals for each category of movies.
SELECT 
    c.name AS film_category, COUNT(r.rental_id) AS no_of_rentals
FROM
    rental r
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id
        INNER JOIN
    film_category fc ON fc.film_id = i.film_id
        INNER JOIN
    category c ON c.category_id = fc.category_id
GROUP BY c.name;

-- Find the average rental rate of movies in each language. select * from language;
SELECT 
    l.name, AVG(f.rental_rate) AS avg_rental_rate
FROM
    film f
        INNER JOIN
    language l ON l.language_id = f.language_id
GROUP BY l.name;

-- Retrieve the customer names along with the total amount they've spent on rentals.
SELECT 
    c.first_name, c.last_name, SUM(p.amount) AS total_amount
FROM
    customer c
        INNER JOIN
    payment p ON p.customer_id = c.customer_id
GROUP BY c.customer_id;

-- List the titles of movies rented by each customer in a particular city (e.g., 'London').
SELECT 
    f.title, cust.first_name, cust.last_name, c.city
FROM
    film f
        INNER JOIN
    inventory i ON i.film_id = f.film_id
        INNER JOIN
    rental r ON r.inventory_id = i.inventory_id
        INNER JOIN
    customer cust ON cust.customer_id = r.customer_id
        INNER JOIN
    address a ON a.address_id = cust.address_id
        INNER JOIN
    city c ON c.city_id = a.city_id;


-- Display the top 5 rented movies along with the number of times they've been rented.
SELECT 
    f.title, COUNT(r.rental_id) AS no_of_times_rented
FROM
    film f
        INNER JOIN
    inventory i ON i.film_id = f.film_id
        INNER JOIN
    rental r ON r.inventory_id = i.inventory_id
GROUP BY f.film_id
ORDER BY no_of_times_rented DESC
LIMIT 5;

-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
SELECT 
    c.customer_id, c.first_name, c.last_name
FROM
    customer c
        INNER JOIN
    rental r ON c.customer_id = r.customer_id
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id
        INNER JOIN
    store s ON i.store_id = s.store_id
WHERE
    s.store_id IN (1 , 2)
GROUP BY c.customer_id
HAVING COUNT(DISTINCT s.store_id) = 2;